version: '3.9'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-nautix}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nautix}
      POSTGRES_DB: ${POSTGRES_DB:-nautix}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nautix"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      target: production
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER:-nautix}:${POSTGRES_PASSWORD:-nautix}@db:5432/${POSTGRES_DB:-nautix}
      - ENVIRONMENT=production
      - SECRET_KEY=${SECRET_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: unless-stopped

volumes:
  pg_data:
  redis_data:
